<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pages on mattoppenheim</title><link>https://mattoppenheim.github.io/page/</link><description>Recent content in Pages on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 29 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/page/index.xml" rel="self" type="application/rss+xml"/><item><title>flex</title><link>https://mattoppenheim.github.io/page/2021/06/flex/</link><pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2021/06/flex/</guid><description>Using a flex sensor as assistive technology This page contains links and information for a flex sensor based assistive technology device that I am developing.
Summary This project (Flex) is designed to fill a gap in what is currently available with off the shelf assistive technology. The system uses a short flexible plastic bend sensor. When the sensor is bent beyond an adjustable threshold, a switch signal is sent to a communication device.</description></item><item><title>making flex-sense</title><link>https://mattoppenheim.github.io/page/2021/05/making-the-flex-sensor/</link><pubDate>Mon, 17 May 2021 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2021/05/making-the-flex-sensor/</guid><description>Making the flex-sense assistive technology device I&amp;rsquo;ve not detailed the build history of a project before. The design decisions made along the way, the testing of different ideas and the mistakes made are not shown. This might lead to the impression that projects went smoothly from start to finish This has never been the case! I&amp;rsquo;m putting this page together as it might help somebody not make the same mistakes I make.</description></item><item><title>Cartoons about Covid-19</title><link>https://mattoppenheim.github.io/page/2021/04/cartoons-about-covid-19/</link><pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2021/04/cartoons-about-covid-19/</guid><description>Covid-19 may not be a laughing matter, but that shouldn&amp;rsquo;t stop a cartoonist. Please find a couple of drawings inspired by the pandemic.
[ngg src=&amp;ldquo;galleries&amp;rdquo; ids=&amp;ldquo;7&amp;rdquo; display=&amp;ldquo;basic_thumbnail&amp;rdquo; thumbnail_crop=&amp;ldquo;0&amp;rdquo;]</description></item><item><title>HandShake set up instructions - backup</title><link>https://mattoppenheim.github.io/page/2021/03/handshake-set-up-instructions-backup/</link><pubDate>Tue, 02 Mar 2021 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2021/03/handshake-set-up-instructions-backup/</guid><description>Last update: September 17th 2020
Details of the HandShake project and a video of the system in use are here: https://mattoppenheim.com/handshake/
I made some videos which complement these instructions.
How to download the code and install the system is here: https://youtu.be/FAy9pbkGqI4
How to operate the system is here: https://youtu.be/MSOVIbfd228
This site details how to set up and operate the system and complements the videos linked above. Have a look at the project page before reading these.</description></item><item><title>HandShake set up instructions</title><link>https://mattoppenheim.github.io/page/2020/04/handshake-set-up-instructions/</link><pubDate>Wed, 29 Apr 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2020/04/handshake-set-up-instructions/</guid><description>All the instructions are on my GitHub page at:
https://mattoppenheim.github.io/microbit_hand_shake/
I used mkdocs to create the site. This means that all the text and supporting images can be downloaded from the GitHub site, should anybody want them.</description></item><item><title>Using a flex sensor as assistive technology</title><link>https://mattoppenheim.github.io/page/2019/06/hand-wave/</link><pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2019/06/hand-wave/</guid><description>GitHub site: https://github.com/mattoppenheim/microbit_flex
Problem How can we use a small sideways hand motion or a small finger movement to act as a switch for switchable software using off the shelf hardware?
Solution We can use an off the shelf flex sensor connected to a BBC micro:bit which has been configured to act as a switch to control switchable software. For an explanation of what switchable software is and how we can use a BBC microbit to act as a switch to interact with it, please see my blog post here.</description></item><item><title>Give Me a Minute set up and use instructions</title><link>https://mattoppenheim.github.io/page/2019/01/give-me-a-minute-set-up-and-use-instructions/</link><pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2019/01/give-me-a-minute-set-up-and-use-instructions/</guid><description>All the instructions are on my GitHub page at:
https://mattoppenheim.github.io/microbit_activity_indicator/
I used mkdocs to create the site. This means that all the text and supporting images can be downloaded from the GitHub site, should anybody want them.</description></item><item><title>200V piezo crystal driver</title><link>https://mattoppenheim.github.io/page/2019/01/200v-piezo-crystal-driver/</link><pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2019/01/200v-piezo-crystal-driver/</guid><description>Spoiler alert: I got the driving circuitry to behave as planned, but I could not feel the crystal vibrate.
The idea is to use the tiny crystals used in piezoelectric motors to create an array of dots that can be made to vibrate under the area of a finger tip. This will be used to create a tactile display that can be felt. The initial aim would be an array of these crystals under an area the size of your fingertip.</description></item><item><title>Christmas Cards</title><link>https://mattoppenheim.github.io/page/2018/12/christmas-cards/</link><pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/12/christmas-cards/</guid><description>2021 Christmas card This year&amp;rsquo;s environmentally friendly, low-emission and carbon negative Christmas card.
Links to two print-it-yourself pdf files are below, one for a single-fold card and one for a two-fold card:
christmas_2021_1_fold
christmas_2021_2_fold
previous Christmas cards Christmas cards for 2020. Hopefully only relevant this year.
December 2019, Santa visits every house in the World.
February 2020, pandemic.
Coincidence &amp;hellip;.
Links to two print-it-yourself pdf files are below, one for a single fold card, one for a two-fold card:</description></item><item><title>Lancaster</title><link>https://mattoppenheim.github.io/page/2018/11/lancaster-cartoons/</link><pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/11/lancaster-cartoons/</guid><description>If you are from Lancaster, you might recognise the cartoon below.
[gallery order=&amp;ldquo;DESC&amp;rdquo; ids=&amp;ldquo;787&amp;rdquo;]</description></item><item><title>Give me a minute - indicating when eye tracker software is in use</title><link>https://mattoppenheim.github.io/page/2018/07/give-me-a-minute/</link><pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/07/give-me-a-minute/</guid><description>The need It can be difficult to tell when somebody who uses an eye tracker to operate their communications software is communicating. So the temptation is to look over their shoulder. This would annoy me! Fil McIntyre, The Head Technologist at Beaumont College asked if it is possible to create an indicator for when the communications software is in use. This enables a more natural two way conversation. You talk to the AT user and when you see the light flashing, you know that a reply is being prepared.</description></item><item><title>Safety Sins</title><link>https://mattoppenheim.github.io/page/2018/05/safety-sins/</link><pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/05/safety-sins/</guid><description>Safety signs worth looking at Safety signs that make you laugh! After almost 20 years in the offshore oil industry, I was suffering from a case of &amp;lsquo;Sign-blindness&amp;rsquo;. This happens when we are overwhelmed with so many generic safety signs that we end up ignoring all of them. I had a go at drawing a few of my own signs, starring some of the people that I work with. My colleagues pretend to like them.</description></item><item><title>Seismic survey cartoons</title><link>https://mattoppenheim.github.io/page/2018/02/seismic-survey-cartoon/</link><pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/02/seismic-survey-cartoon/</guid><description>Here&amp;rsquo;s a gallery of cartoons inspired by more years than I can remember of working in the seismic survey industry. [ngg_images source=&amp;ldquo;galleries&amp;rdquo; container_ids=&amp;ldquo;4&amp;rdquo; display_type=&amp;ldquo;photocrati-nextgen_basic_thumbnails&amp;rdquo; override_thumbnail_settings=&amp;ldquo;0&amp;rdquo; thumbnail_width=&amp;ldquo;240&amp;rdquo; thumbnail_height=&amp;ldquo;160&amp;rdquo; thumbnail_crop=&amp;ldquo;1&amp;rdquo; images_per_page=&amp;ldquo;20&amp;rdquo; number_of_columns=&amp;ldquo;0&amp;rdquo; ajax_pagination=&amp;ldquo;0&amp;rdquo; show_all_in_lightbox=&amp;ldquo;0&amp;rdquo; use_imagebrowser_effect=&amp;ldquo;0&amp;rdquo; show_slideshow_link=&amp;ldquo;1&amp;rdquo; slideshow_link_text=&amp;quot;[Show slideshow]&amp;quot; order_by=&amp;ldquo;sortorder&amp;rdquo; order_direction=&amp;ldquo;ASC&amp;rdquo; returns=&amp;ldquo;included&amp;rdquo; maximum_entity_count=&amp;ldquo;500&amp;rdquo;]</description></item><item><title>HeadBanger - controlling software with head motion</title><link>https://mattoppenheim.github.io/page/2018/02/headbanger-controlling-software-with-head-motion/</link><pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/02/headbanger-controlling-software-with-head-motion/</guid><description>How can we enable somebody to control software with their head? Traditionally we would set up physical buttons or attach sensors to a helmet. Both of these solutions have their issues, so I was asked if it would be possible to set up a &amp;lsquo;virtual&amp;rsquo; system.
The aim is to make controllers to allows the students at Beaumont College to operate their Grid software or to activate one of the many network enabled devices they have - such as lamps using head gesture.</description></item><item><title>BBC micro:bit wrist holder</title><link>https://mattoppenheim.github.io/page/2018/02/bbc-microbit-wrist-holder/</link><pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/02/bbc-microbit-wrist-holder/</guid><description>I made several wrist holders for the microbit and a AAA battery pack as I could not find a suitable off the shelf solution.
Since I made my own - instructions below, I found a couple of ready-made solutions that I write about in this blog:
BBC micro:bit wrist holders
Make your own microbit wrist holder This section shows you how to convert a £3 iPod 7 armband into a wrist or arm holder for a BBC micro:bit board and battery.</description></item><item><title>Caricatures</title><link>https://mattoppenheim.github.io/page/2018/02/caricatures/</link><pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/02/caricatures/</guid><description>A few caricatures I drew of people who have the misfortune to work with or know me.</description></item><item><title>HandShake</title><link>https://mattoppenheim.github.io/page/2018/02/handshake/</link><pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/02/handshake/</guid><description>Introduction HandShake is a project to help enable people who need to access software to create speech to be able to access this technology.
Many people who are unable to speak use specialist software to create speech. This software can often be operated using buttons or joysticks and is known as switchable software. Please see a more detailed explanation of this and a video showing one software package in my post Using the microbit to control switch access software.</description></item><item><title>posts</title><link>https://mattoppenheim.github.io/page/2018/02/posts/</link><pubDate>Thu, 15 Feb 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/02/posts/</guid><description/></item><item><title>Cowtoons</title><link>https://mattoppenheim.github.io/page/2018/02/cowtoons/</link><pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/02/cowtoons/</guid><description>The Black Cow coffee shop in Croton in Hudson, New York, is one of my &amp;lsquo;Happy Places&amp;rsquo;, so I drew a few cowtoons.</description></item><item><title/><link>https://mattoppenheim.github.io/page/2018/01/introduction/</link><pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2018/01/introduction/</guid><description>I re-purpose off the shelf hardware to create enabling technology. Many of my projects come from Beaumont College, Lancaster which has about 100 students with a variety of disabilities. I spend about half of the year working as a Geophysicist on marine seismic survey ships. I have an Honorary Researcher position at InfoLab21, Lancaster University during my time off where I work on the enabling technology projects.
My GitHub page is here.</description></item><item><title>Using touch sensors and audio to help the visually impaired</title><link>https://mattoppenheim.github.io/page/2012/12/using-touch-sensors-and-audio-to-help-the-visually-impaired/</link><pubDate>Fri, 28 Dec 2012 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2012/12/using-touch-sensors-and-audio-to-help-the-visually-impaired/</guid><description>An article describing the hardware and firmware of this project is published in the May 2012 edition of Circuit Cellar, with code and circuit designs available from their ftp site. Details of testing are published in &amp;ldquo;Speech and Touch Enhanced Interface for the Visually Impaired&amp;rdquo; in the Journal of Assistive Technologies, Issue 3, 2013. A link to the academic article is here, however even I can&amp;rsquo;t access the pdf of the article as I don&amp;rsquo;t have a password for the journal, but you can read the abstract for free.</description></item><item><title>Arduino XKitz touch sensors</title><link>https://mattoppenheim.github.io/page/2012/11/arduino-xkitz-touch-sensors/</link><pubDate>Wed, 28 Nov 2012 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2012/11/arduino-xkitz-touch-sensors/</guid><description>The code for this project can be downloaded from github.
I used the Arduino Uno, Xkitz touch sensor shields and a USB shield connected to a Nexus One Android phone to add audio enhanced touch sensors to a radio. When a control is touched, an audio tag describing the function is played by the phone, but without the control having to be activated. This means that someone who is visually impaired can learn the layout.</description></item><item><title>mTouch capacitive touch sensor boards</title><link>https://mattoppenheim.github.io/page/2012/11/mtouch-capacitive-touch-sensor-boards/</link><pubDate>Wed, 28 Nov 2012 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2012/11/mtouch-capacitive-touch-sensor-boards/</guid><description>The boards and code described below can be downloaded from github.
I built a 16 channel touch sensor board built around the PIC16F727. This enables touch sensors to be easily added to your designs. Each touch sensor channel is brought out to a header pin which can be connected to a conductive pad to add touch sensitivity to a surface. I freely admit that the firmware is a simplified version of Microchip&amp;rsquo;s example code for their mTouch hardware, which I ported to MikroC Pro.</description></item><item><title>Dots - indoor service discovery using ultrasonics.</title><link>https://mattoppenheim.github.io/page/2012/05/dots/</link><pubDate>Thu, 10 May 2012 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2012/05/dots/</guid><description>Pushing forwards the frontiers of service discovery ultrasonically Dot with attached Particle and AAA battery These were developed for a proof of concept research project. Slap one of these onto every printer, fax, PDA and gadget. Then slip a Relate dongle into your laptop. As you walk around your building your software will automatically detect and locate each of the devices. The fancy schmancy interface allows you to locate the devices and share services - drag and drop documents for instance.</description></item><item><title>Cosmic neutron detector</title><link>https://mattoppenheim.github.io/page/2009/12/cosmic-neutron-detector/</link><pubDate>Mon, 28 Dec 2009 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2009/12/cosmic-neutron-detector/</guid><description>Detecting neutrons. Cosmically. Who doesn&amp;rsquo;t want to detect high enery neutrons? They can damage avionic electronics and potentially damage cells. A clever neutron detector was constructed by a team led by Dr Steve Monk at the Engineering Department, Lancaster University. The detector works when characteristic charges are created in it - from high energy neutrons interacting with a special boron coating. The signal produced in the photodetector is fed to a high frequency ADC.</description></item><item><title>Relate Cube - indoor positioning using ultrasonics</title><link>https://mattoppenheim.github.io/page/2009/12/relate-cube-indoor-positioning-using-ultrasonics/</link><pubDate>Mon, 28 Dec 2009 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/page/2009/12/relate-cube-indoor-positioning-using-ultrasonics/</guid><description>Relate Cube. After the Dots came the Cube. The Relate project required a prototype 3D ultrasonic ranging device. We also wanted enhanced embedded processing capability to enable the application of fancy algorithms to test out signal processing algorithms. So I designed and built the Cube. This has a dsPIC128GP706 16 bit digital signal processor (DSP) as an embedded processor. The basic cube consists of four stacked boards with a Teco Particle computer providing the wireless communications - this clips onto the Communications board on top of the device.</description></item></channel></rss>