<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pytest on mattoppenheim</title><link>https://mattoppenheim.github.io/tags/pytest/</link><description>Recent content in pytest on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 16 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/tags/pytest/index.xml" rel="self" type="application/rss+xml"/><item><title>pytest and relative imports part 2</title><link>https://mattoppenheim.github.io/pytest-and-relative-imports-part-2/</link><pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/pytest-and-relative-imports-part-2/</guid><description>I had another tussle with getting pytest to recognise where the modules to be tested are relative to the directory where the testing code is. I use the eclipse IDE for coding. This time I resolved the issue using relative imports. Last time I tried adding the directory where testing code is to the system path. This is detailed in my post here.
This time I realised that I could solve the issue using relative imports correctly.</description></item><item><title>Running pytest when the test files are in a different directory to the source files</title><link>https://mattoppenheim.github.io/running-pytest-when-the-test-files-are-in-a-different-directory-to-the-source-files/</link><pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/running-pytest-when-the-test-files-are-in-a-different-directory-to-the-source-files/</guid><description>I had a battle to get my testing directory structure to work outside of an IDE. Please find my solution below. Tested on Windows 7 using python 3.6 and Linux Mint using python 3.4, running the code using the command line:
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] python -m pytest test_compress_files.py [/code]
The file I wrote to be tested is called compress_files.py in a directory named \src. The file containing tests to be run using pytest is called test_compress_files.</description></item></channel></rss>