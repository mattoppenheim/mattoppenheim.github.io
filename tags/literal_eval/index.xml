<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>literal_eval on mattoppenheim</title><link>https://mattoppenheim.github.io/tags/literal_eval/</link><description>Recent content in literal_eval on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 11 Apr 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/tags/literal_eval/index.xml" rel="self" type="application/rss+xml"/><item><title>parsing and unpacking python3 serial data containing double backslashes</title><link>https://mattoppenheim.github.io/post/2017/04/parsing-and-unpacking-python3-serial-data-containing-double-backslashes-2/</link><pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/post/2017/04/parsing-and-unpacking-python3-serial-data-containing-double-backslashes-2/</guid><description>edit 11th October 2017: The &amp;rsquo;eval&amp;rsquo; statements in the code shown below can be replaced with the safer &amp;rsquo;literal_eval&amp;rsquo; from the ast class in the standard library. From the python docs: &amp;lsquo;Safely evaluate an expression node or a string containing a Python literal or container display. The string or node provided may only consist of the following Python literal structures: strings, bytes, numbers, tuples, lists, dicts, sets, booleans, and None.&amp;rsquo;</description></item></channel></rss>