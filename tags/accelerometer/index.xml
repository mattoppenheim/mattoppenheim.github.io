<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>accelerometer on mattoppenheim</title><link>https://mattoppenheim.github.io/tags/accelerometer/</link><description>Recent content in accelerometer on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Tue, 17 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/tags/accelerometer/index.xml" rel="self" type="application/rss+xml"/><item><title>Real time accelerometer display from three BBC Micro:bits</title><link>https://mattoppenheim.github.io/2018/07/17/real-time-accelerometer-display-from-three-bbc-microbits/</link><pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2018/07/17/real-time-accelerometer-display-from-three-bbc-microbits/</guid><description>How to plot real-time sensor data from three BBC micro:bits.
Please find a video showing this in action below. On the screen to the right of the juggling clown, you can see the accelerometer data. Each BBC micro:bit has a three-axis accelerometer in it. I get the averaged acceleration value from all three axes from each micro:bit. On the screen, three are three traces, one for each micro:bit. As the boards are juggled, the accelerometer values are sent by radio to a receiver micro:bit connected to the computer.</description></item><item><title>how to configure the accelerometer range on the microbit using micropython</title><link>https://mattoppenheim.github.io/2017/04/13/how-to-configure-the-accelerometer-range-on-the-microbit-using-micropython/</link><pubDate>Thu, 13 Apr 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2017/04/13/how-to-configure-the-accelerometer-range-on-the-microbit-using-micropython/</guid><description>This article details how to set the range of sensitivity on the accelerometer on the microbit board using micropython and the i2c interface. I am using v1.7.9 of micropython for the microbit, the mu editor and linux mint v17.
After listening to Joe Finney talk about his role in developing the microbit board I realised I could use it for some of my hand gesture assistive technology work. The accelerometer on the microbit board is an MMA8653FC, data sheet here.</description></item><item><title>XBee series 1 accelerometer sampling</title><link>https://mattoppenheim.github.io/2016/12/28/xbee-series-1-accelerometer-sampling/</link><pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2016/12/28/xbee-series-1-accelerometer-sampling/</guid><description>XBee modules have a built in ADC, so why not sample an analog accelerometer directly? This will allow me to make a smaller wireless accelerometer that I can strap to my participants for testing with. Long term I want a microcontroller in the system for onboard signal processing. But for initial data collection, the smaller and simpler the better. Make it work. Make it fast. Make it right.. I am using the ADXL335 analog output 3-axis accelerometer connected to D0, D1 and D2 of an XBee series 1.</description></item></channel></rss>