<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pyocd-gdbserver on mattoppenheim</title><link>https://mattoppenheim.github.io/tags/pyocd-gdbserver/</link><description>Recent content in pyocd-gdbserver on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 24 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/tags/pyocd-gdbserver/index.xml" rel="self" type="application/rss+xml"/><item><title>Zombie BBC Micro:bit serial ports created when using pyocd-gdbserver --persist</title><link>https://mattoppenheim.github.io/post/2018/05/multiple-bbc-microbit-serial-ports-when-using-pyocd-gdbserver/</link><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/post/2018/05/multiple-bbc-microbit-serial-ports-when-using-pyocd-gdbserver/</guid><description>So I was happily using pyocd-gdbserver to program and enter debugging mode on a BBC Micro:bit attached to one of my laptop&amp;rsquo;s USB port, as described here. Then I stopped being able to read data through the USB port&amp;hellip; Long story short, multiple &amp;lsquo;zombie&amp;rsquo; ports were created and my Python script was connecting to a zombie instead of the live one.
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] setserial -g /dev/ttyACM* [/code]
output:
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] /dev/ttyACM0, UART: unknown, Port: 0x0000, IRQ: 0, Flags: low_latency /dev/ttyACM1, UART: unknown, Port: 0x0000, IRQ: 0, Flags: low_latency [/code]</description></item></channel></rss>