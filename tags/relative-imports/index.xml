<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>relative-imports on mattoppenheim</title><link>https://mattoppenheim.github.io/tags/relative-imports/</link><description>Recent content in relative-imports on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 16 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/tags/relative-imports/index.xml" rel="self" type="application/rss+xml"/><item><title>pytest and relative imports part 2</title><link>https://mattoppenheim.github.io/2019/01/16/pytest-and-relative-imports-part-2/</link><pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2019/01/16/pytest-and-relative-imports-part-2/</guid><description>I had another tussle with getting pytest to recognise where the modules to be tested are relative to the directory where the testing code is. I use the eclipse IDE for coding. This time I resolved the issue using relative imports. Last time I tried adding the directory where testing code is to the system path. This is detailed in my post here.
This time I realised that I could solve the issue using relative imports correctly.</description></item></channel></rss>