<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>processes on mattoppenheim</title><link>https://mattoppenheim.github.io/tags/processes/</link><description>Recent content in processes on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 01 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/tags/processes/index.xml" rel="self" type="application/rss+xml"/><item><title>Using pyzmq to communicate between GUIs and processes</title><link>https://mattoppenheim.github.io/2016/10/01/using-pyzmq-to-communicate-between-guis-and-processes/</link><pubDate>Sat, 01 Oct 2016 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2016/10/01/using-pyzmq-to-communicate-between-guis-and-processes/</guid><description>Graphical user interfaces (GUIs) all want to be the main thread. They don&amp;rsquo;t play well together. Trying to run GUIs built with different libraries concurrently and get them to talk to one another took me a while to figure out. This article shows how I used the pyzmq library to communicate between two graphical user interfaces (GUIs).Â I am working on unique hand gesture recognition. One GUI represents a hand position.</description></item></channel></rss>