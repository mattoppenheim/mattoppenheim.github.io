<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>microbit on mattoppenheim</title><link>https://mattoppenheim.github.io/tags/microbit/</link><description>Recent content in microbit on mattoppenheim</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 01 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://mattoppenheim.github.io/tags/microbit/index.xml" rel="self" type="application/rss+xml"/><item><title>Logic level converter between an Arduino Uno and micro:bit using a FET transistor</title><link>https://mattoppenheim.github.io/2022/05/01/logic-level-converter-between-an-arduino-and-microbit-using-a-fet-transistor/</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2022/05/01/logic-level-converter-between-an-arduino-and-microbit-using-a-fet-transistor/</guid><description>Summary We can use a single FET transistor with two resistors to make a two way logic level converter to interface e.g. Arduino Uno and a micro:bit.
The problem I need to interface a micro:bit to an Arduino Uno, connecting the RX and TX pins of the Arduino to tabs on the edge connector of the micro:bit. The Arduino Uno has 5V logic levels. The micro:bit has 3V logic levels. The 5V signals from the Arduino Uno may damage the micro:bit.</description></item><item><title>Using the micro:bit to detect electrical current</title><link>https://mattoppenheim.github.io/2021/07/16/using-the-microbit-to-detect-electrical-current/</link><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2021/07/16/using-the-microbit-to-detect-electrical-current/</guid><description>This blog is an ongoing record of using the micro:bit to detect electrical current.
Idea The micro:bit has a magnetometer on the board. When a current flows through a wire, a magnetic field is produced. We can use the magnetometer to detect this.
This is part of an energy conservation project for classroom use.
Summary The magnetometer on the micro:bit is used to detect the change in magnetic field produced in the mains cable to a hair dryer when it is turned on and off.</description></item><item><title>Setting up a micropython editor with the BBC micro:bit v2 on Linux</title><link>https://mattoppenheim.github.io/2021/01/07/setting-up-a-micropython-editor-with-the-bbc-microbit-v2-on-linux/</link><pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2021/01/07/setting-up-a-micropython-editor-with-the-bbc-microbit-v2-on-linux/</guid><description>This post follows on from my blog post that shows how to set up the mu-editor in Linux for v1 of the micro:bit. This blog post is here:
https://mattoppenheim.com/2021/01/05/setting-up-mu-editor-with-the-bbc-microbit-on-linux/
I couldn&amp;rsquo;t get the mu-editor to work with micro:bit v2. This was frustrating as I wanted to check some existing code ran on v2 of the micro:bit as well as start to use some of the new feautures on board.
I solved this by following a tip from a comment on my first post.</description></item><item><title>micro:bit c toolchain explained, part 2. yotta, file locations</title><link>https://mattoppenheim.github.io/2020/12/29/microbit-c-toolchain-explained-part-2-yotta-file-locations/</link><pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/12/29/microbit-c-toolchain-explained-part-2-yotta-file-locations/</guid><description>December 2020: I wrote this post when only v1 of the micro:bit existed. I haven&amp;rsquo;t yet checked to see if the contents are still valid for the toolchain used to program v2 of the micro:bit.
This article follows on from part 1 of my attempt to explain the chain of tools used to build your C code into something that can run on the BBC micro:bit. In this part, I will cover the yotta build tool and how the make build tool is used as the top level component.</description></item><item><title>Using a microbit to control a servo motor</title><link>https://mattoppenheim.github.io/2020/10/03/using-a-microbit-to-control-a-servo-motor/</link><pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/10/03/using-a-microbit-to-control-a-servo-motor/</guid><description>Subtitle: Making things move a microbit at a time
In this post I explain how I set up and operated a small servo motor that runs directly from the same 2xAAA battery pack that powers my microbit. I then explain how to operate a servo motor that requires a 5V power supply from the same microbit, using a transistor as a voltage level converter for the control signal.
Introduction I set up a small servo motor for a project to make an automated guinea pig feeder.</description></item><item><title>BBC micro:bit guinea pig timed feeder instructions</title><link>https://mattoppenheim.github.io/2020/09/08/bbc-microbit-activating-a-servo-motor-using-a-timer/</link><pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/09/08/bbc-microbit-activating-a-servo-motor-using-a-timer/</guid><description>This blog post is the instructions on how to use a timed servo motor circuit that I lashed up as part of a guinea pig feeder for a friend.
The hardware details can be found here: here
Software is on my GitHub site here
The need A friend wanted something to open a box of food to feed his guinea pigs. The box needs to open after an adjustable time.</description></item><item><title>BBC micro:bit wrist holders</title><link>https://mattoppenheim.github.io/2020/09/01/bbc-microbit-wrist-holders/</link><pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/09/01/bbc-microbit-wrist-holders/</guid><description>With my handshake project, a microbit and AAA battery pack need to be worn on the wrist. They can be vigorously shaken. I don&amp;rsquo;t want the equipment flying off! So what can I use that will hold the microbit and batteries safely in place and is comfortable and safe to wear?
I tried a couple of armband holders aimed at iPods recently. Both of them are suitable for housing a BBC microbit and a AAA battery pack.</description></item><item><title>Automating loading micropython code to the BBC micro:bit in Linux</title><link>https://mattoppenheim.github.io/2020/08/23/automating-loading-micropython-code-to-the-bbc-microbit-in-linux/</link><pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/08/23/automating-loading-micropython-code-to-the-bbc-microbit-in-linux/</guid><description>Introduction When I edit micropython for a microbit project, I want the code to automagically load onto the microbit each time that I save the code. Then I want to see any messages from the microbit displayed. I worked out a toolchain that does this under Linux.
I summarise the toolchain in the next section, then go through each step in more detail.
For the examples in this post, I am editing a file called &amp;lsquo;feeder.</description></item><item><title>Powering the BBC micro:bit with a 5V power bank</title><link>https://mattoppenheim.github.io/2020/08/21/powering-the-bbc-microbit-with-a-5v-power-bank/</link><pubDate>Fri, 21 Aug 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/08/21/powering-the-bbc-microbit-with-a-5v-power-bank/</guid><description>I had an interesting question to a blog post I made about running a DC motor from a microbit. The blog post is here. I am pleased that anybody reads my blogs.
Doesn&amp;rsquo;t applying 5V to the microbit board exceed the voltage spec?
When we connect the board to our laptops or PCs, we apply 5V to the board through the USB connector. Sometimes I run the board from a USB power bank.</description></item><item><title>Running handShake in administrator mode to operate Grid 3</title><link>https://mattoppenheim.github.io/2020/08/05/running-handshake-in-administrator-mode-to-operate-grid-3/</link><pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/08/05/running-handshake-in-administrator-mode-to-operate-grid-3/</guid><description>Sensory Software&amp;rsquo;s Grid 3 is a popular communication software package, running in Windows. Naturally, I would like handShake to be able to operate this software through the software keystrokes that handShake generates.Â To get Grid 3 to respond to a software keystroke, I have to &amp;rsquo;elevate&amp;rsquo; the base.py script which runs on the communication device to run as an Administrator.
There is a second solution. I can use a Freetronics Leostick USB dongle as a pretend keyboard and have this generate keystrokes that appear as coming from a physical keyboard.</description></item><item><title>Connecting the BBC micro:bit to Windows and adding code to it</title><link>https://mattoppenheim.github.io/2020/04/27/connecting-the-bbc-microbit-to-windows-and-adding-code-to-it/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/04/27/connecting-the-bbc-microbit-to-windows-and-adding-code-to-it/</guid><description>This page details how to connect the BBC micro:bit to Windows then install a pre-written program to it. This guide was written to support some of my &amp;lsquo;how-to&amp;rsquo; guides for assistive technology devices I made using the BBC micro:bit.
Author: Matthew Oppenheim
email: matt.oppenheim@gmail.com
GitHub site: https://github.com/mattoppenheim
Summary Connect the microbit using a micro USB cable from the microbit to the Windows device. You do not need a battery pack for the microbit.</description></item><item><title>micro:bit C toolchain explained, part 1. ninja &amp; cmake.</title><link>https://mattoppenheim.github.io/2020/03/29/microbit-c-toolchain-make-ninja-cmake-explained/</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2020/03/29/microbit-c-toolchain-make-ninja-cmake-explained/</guid><description>December 2020: I wrote this post when only v1 of the micro:bit existed. I haven&amp;rsquo;t yet checked to see if the contents are still valid for the toolchain used to program v2 of the micro:bit.
I use the offline build tools from Lancaster University for compiling and building C-code for the BBC Micro:bit board. I used the toolset without really understanding what was going on under the hood. I spent some happy time fixing this.</description></item><item><title>Communication Matters Conference 2019</title><link>https://mattoppenheim.github.io/2019/09/12/communication-matters-conference-2019/</link><pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2019/09/12/communication-matters-conference-2019/</guid><description>I attended the 2019 Communication Matters Conference in Leeds on Monday. I presented a poster on three of my assistive technology projects using the BBC micro:bit and gave a &amp;rsquo;lightning talk&amp;rsquo; - 15 slides, auto advancing every 25 seconds. I wrote the PowerPoint presentation using Libreoffice on my Linux distro. Just before giving the talk I realised I had not tested it in Windows, which the conference PC was running with.</description></item><item><title>Using the microbit to control switch access software</title><link>https://mattoppenheim.github.io/2019/06/24/using-the-microbit-to-control-switch-access-software/</link><pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2019/06/24/using-the-microbit-to-control-switch-access-software/</guid><description>What is switch access software Many disabled people use specialist software to create speech or to interact with the environment (e.g. turn on lights). Some are unable to use keyboards or mice to operate this software, so use a variety of &amp;lsquo;switches&amp;rsquo;, such as push buttons. These buttons act like keys on a keyboard, or pretend to be a mouse click.
I took some hand held video of a switchable software package which enables speech to be created.</description></item><item><title>Switching a 5V DC motor with a microbit.</title><link>https://mattoppenheim.github.io/2019/03/14/switching-a-5v-dc-motor-with-a-microbit/</link><pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2019/03/14/switching-a-5v-dc-motor-with-a-microbit/</guid><description>This post shows how to use a BBC microbit to control a 5V fan or DC motor using a FET switch. The circuit shows how we can use a transistor to control a device that needs more current than the microbit can supply.
This project uses a 5V voltage from a USB power bank.
Only connect 5V to the USB connector on the microbit - not the battery connector or the edge connector.</description></item><item><title>Measuring the BBC micro:bit LED current draw</title><link>https://mattoppenheim.github.io/2019/03/06/measuring-the-bbc-microbit-led-current-draw/</link><pubDate>Wed, 06 Mar 2019 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2019/03/06/measuring-the-bbc-microbit-led-current-draw/</guid><description>Summary: I looked at the voltage and current supplied to the BBC micro:bit for different numbers of active LEDs. The voltage to the LEDs is pulsed at about 55Hz, with each LED on about 1/3 of the time at maximum intensity. The frequency is high enough that the LED appears continuously lit. The current draw from a single pin is in spec for the microcontroller. The current supplied to each LED decreases as the total number of LEDs being sourced from the same microcontroller pin increases.</description></item><item><title>Real time accelerometer display from three BBC Micro:bits</title><link>https://mattoppenheim.github.io/2018/07/17/real-time-accelerometer-display-from-three-bbc-microbits/</link><pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2018/07/17/real-time-accelerometer-display-from-three-bbc-microbits/</guid><description>How to plot real-time sensor data from three BBC micro:bits.
Please find a video showing this in action below. On the screen to the right of the juggling clown, you can see the accelerometer data. Each BBC micro:bit has a three-axis accelerometer in it. I get the averaged acceleration value from all three axes from each micro:bit. On the screen, three are three traces, one for each micro:bit. As the boards are juggled, the accelerometer values are sent by radio to a receiver micro:bit connected to the computer.</description></item><item><title>Using udev to remove the need for sudo with the BBC Micro:bit</title><link>https://mattoppenheim.github.io/2018/06/24/using-udev-to-remove-the-need-for-sudo-with-the-bbc-microbit/</link><pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2018/06/24/using-udev-to-remove-the-need-for-sudo-with-the-bbc-microbit/</guid><description>A comment on this post hinted that there is a way to remove the need to use &amp;lsquo;sudo&amp;rsquo; when interacting with the BBC Micro:bit on Linux. So I left a comment asking how to do this, which the author kindly answered:
The way to make sure there is no need for root permissions to access USB device (like a connected micro:bit) is by creating a file in the `/etc/udev/rules.d/` directory with proper config.</description></item><item><title>Zombie BBC Micro:bit serial ports created when using pyocd-gdbserver --persist</title><link>https://mattoppenheim.github.io/2018/05/24/multiple-bbc-microbit-serial-ports-when-using-pyocd-gdbserver/</link><pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2018/05/24/multiple-bbc-microbit-serial-ports-when-using-pyocd-gdbserver/</guid><description>So I was happily using pyocd-gdbserver to program and enter debugging mode on a BBC Micro:bit attached to one of my laptop&amp;rsquo;s USB port, as described here. Then I stopped being able to read data through the USB port&amp;hellip; Long story short, multiple &amp;lsquo;zombie&amp;rsquo; ports were created and my Python script was connecting to a zombie instead of the live one.
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] setserial -g /dev/ttyACM* [/code]
output:
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] /dev/ttyACM0, UART: unknown, Port: 0x0000, IRQ: 0, Flags: low_latency /dev/ttyACM1, UART: unknown, Port: 0x0000, IRQ: 0, Flags: low_latency [/code]</description></item><item><title>Eclipse, yotta, C/C++ and the BBC Micro:bit</title><link>https://mattoppenheim.github.io/2018/05/04/eclipse-yotta-c-c-and-the-bbc-microbit/</link><pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2018/05/04/eclipse-yotta-c-c-and-the-bbc-microbit/</guid><description>With the help of the excellent instructions at the link below I set up Eclipse with yotta to compile C code for the BBC micro:bit under Linux: http://flames-of-code.netlify.com/blog/microbit-cpp-3/ I get the debugger window to come up, but have not yet used this feature in anger. The writer, achary, clearly knows more about Eclipse and embedded programming than I do. I got a little stuck at a couple of stages so created this page to pass on my solutions.</description></item><item><title>Bash script to mount and unmount a BBC Micro:bit</title><link>https://mattoppenheim.github.io/2017/11/20/bash-script-to-mount-and-unmount-a-bbc-microbit/</link><pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2017/11/20/bash-script-to-mount-and-unmount-a-bbc-microbit/</guid><description>I develop using the BBC Micro:bit (which I&amp;rsquo;ll call a microbit from now on) using Linux. To get a new hex file on to the microbit, the microbit has to be mounted on to the file system. Which may seem obvious. But the microbit has a habit of unmounting itself after being programmed. Or not mounting when it is plugged in. So I wrote a script to make things easier. Because I can.</description></item><item><title>Enabling the analog to digital converter (ADC) on the BBC Micro:bit using C/C++</title><link>https://mattoppenheim.github.io/2017/11/20/enabling-the-analog-to-digital-converter-adc-on-the-bbc-microbit-using-c-c/</link><pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2017/11/20/enabling-the-analog-to-digital-converter-adc-on-the-bbc-microbit-using-c-c/</guid><description>To get the example ADC code to work on the Lancaster Github site, change the line:
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] MicroBitPin P0(MICROBIT_ID_IO_P0, MICROBIT_PIN_P0, PIN_CAPABILITY_BOTH); [/code]
To:
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] MicroBitPin P0(MICROBIT_ID_IO_P0, MICROBIT_PIN_P0, PIN_CAPABILITY_ANALOG); [/code]
I tested this using both the online Mbed compiler and the yotta compiler.</description></item><item><title>Getting the BBC Micro:bit radio to work with the mbed online C/C++ compiler</title><link>https://mattoppenheim.github.io/2017/11/20/132/</link><pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2017/11/20/132/</guid><description>This blog explains how to get the example programs for working with the non-Bluetooth radio on the BBC Micro:bit to compile correctly using the Mbed online C/C++ compiler.
Short story Two options:
1 Place the line:
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] #define MICROBIT_BLE_ENABLED 0 [/code]
in the MicroBit.h library and forget about the config.json file.
Or
2 Create an mbed_app.json file instead of the config.json file with this content:
[code language=&amp;ldquo;shell&amp;rdquo; light=&amp;ldquo;true&amp;rdquo;] { &amp;ldquo;macros&amp;rdquo;: [ &amp;ldquo;MICROBIT_BLE_ENABLED=0&amp;rdquo; ] } [/code]</description></item><item><title>Setting up yotta and C with the BBC Micro:bit by modifying the examples directory</title><link>https://mattoppenheim.github.io/2017/11/20/setting-up-yotta-and-c-with-the-bbc-microbit-by-modifying-the-examples-directory/</link><pubDate>Mon, 20 Nov 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2017/11/20/setting-up-yotta-and-c-with-the-bbc-microbit-by-modifying-the-examples-directory/</guid><description>I set up to program the BBC Micro:bit (which I&amp;rsquo;ll call the microbit from now on) in C/C++ under Linux. I&amp;rsquo;ve been using micropython to program the boards up to now, but want to leverage the increased performance that using C can give and some of the C libraries that are available for e.g. encryption.
There is good documentation on the Lancaster University microbit github page:
https://lancaster-university.github.io/microbit-docs/
I installed the offline tools as I spend a lot of time working at sea where you can&amp;rsquo;t always rely on having an internet connection.</description></item><item><title>eyeBlink - enabling natural two way conversation with somebody who uses an eyetracker</title><link>https://mattoppenheim.github.io/2017/07/14/eyeblink/</link><pubDate>Fri, 14 Jul 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2017/07/14/eyeblink/</guid><description>It can be difficult to tell when a student who uses an eye tracker to operate their communications software is actively using the software. So the temptation is to go and look over their shoulder. The Head Technologist at Beaumont College asked if it is possible to have a light flash to indicate when the communications software is being used. This makes for a more natural two way conversation. You talk to the student and you see the light flashing, so you know that a reply is being composed.</description></item><item><title>how to configure the accelerometer range on the microbit using micropython</title><link>https://mattoppenheim.github.io/2017/04/13/how-to-configure-the-accelerometer-range-on-the-microbit-using-micropython/</link><pubDate>Thu, 13 Apr 2017 00:00:00 +0000</pubDate><guid>https://mattoppenheim.github.io/2017/04/13/how-to-configure-the-accelerometer-range-on-the-microbit-using-micropython/</guid><description>This article details how to set the range of sensitivity on the accelerometer on the microbit board using micropython and the i2c interface. I am using v1.7.9 of micropython for the microbit, the mu editor and linux mint v17.
After listening toÂ Joe FinneyÂ talk about his role in developing theÂ microbitÂ board I realised I could use it for some of myÂ hand gestureÂ assistive technology work. The accelerometer on the microbit board is anÂ MMA8653FC, data sheetÂ here.</description></item></channel></rss>